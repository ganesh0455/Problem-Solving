------------------------------
Count digits in a number
------------------------------
Problem Statement: Given an integer N, return the number of digits in N.

Worst
    T - O ( log10(N) + 1 )
    S - O (1)
Optimized
    T - O (1)
    S - O (1)

------------------------------
Reverse Digits of A Number
------------------------------
Problem Statement: Given an integer N return the reverse of the given number.
Note: If a number has trailing zeros, then its reverse will not include them. For e.g., reverse of 10400 will be 401 instead of 00401.

Optimized
    T - O ( log10(N) + 1 )
    S - O (1)

------------------------------
Palindrome or Not
------------------------------
Problem Statement: Given an integer N, return true if it is a palindrome else return false.
A palindrome is a number that reads the same backward as forward. For example, 121, 1331, and 4554 are palindromes because they remain the same when their digits are reversed.

Optimized
    T - O ( log10(N) + 1 )
    S - O (1)

------------------------------
GCD of two numbers
------------------------------
Problem Statement: Given two integers N1 and N2, find their greatest common divisor.

Worst, Better, Optimized
    T - O ( MIN(n1, n2) )
    S - O (1)

-----------------------------
Armstrong Number or not
-----------------------------
Problem Statement: Given an integer N, return true it is an Armstrong number otherwise return false.
An Amrstrong number is a number that is equal to the sum of its own digits each raised to the power of the number of digits.

Optimized
    T - O ( log10(N) + 1 )

------------------------------
Divisors of a given Number
------------------------------
Problem Statement: Given an integer N, return all divisors of N.
A divisor of an integer N is a positive integer that divides N without leaving a remainder. In other words, if N is divisible by another integer without any remainder, then that integer is considered a divisor of N.

Worst
    T - O (N)
    S - O (N)
Optimal
    T - O (Squareroot(Number))
    S - O (2*Squareroot(Number))

----------------------
Prime or not
----------------------
Problem Statement: Given an integer N, check whether it is prime or not. A prime number is a number that is only divisible by 1 and itself and the total number of divisors is 2.

Worst
    T - O (N)
    S - O (1)
Optimal
    T - O (Squareroot(Number))
    S - O (1)
